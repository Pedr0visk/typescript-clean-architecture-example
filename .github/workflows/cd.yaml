name: Build and Deploy CDP to IKS

on:
  push:
    branches:
      - production
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "k8s/config-postgres-deployment.yaml"
      - "k8s/config-redis-deployment.yaml"

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_RESOURCE_GROUP: ${{ secrets.IBM_RESOURCE_GROUP }}
  IBM_CLOUD_REGION: ${{ secrets.IBM_CLOUD_REGION }}
  IKS_CLUSTER: ${{ secrets.IKS_CLUSTER }}
  ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
  REGISTRY_HOSTNAME: ${{ secrets.REGISTRY_HOSTNAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Download and Install IBM Cloud CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f kubernetes-service
          ibmcloud plugin install -f container-registry

      # Authenticate with IBM Cloud CLI
      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g "${IBM_RESOURCE_GROUP}"
          ibmcloud cr region-set global
          ibmcloud cr login

      # This is the a separate action that sets up buildx runner
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # So now you can use Actions' own caching!
      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # And make it available for the builds
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_HOSTNAME }}/${{ env.ICR_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.GITHUB_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # Temp fix
      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Deploy the Docker image to the IKS cluster
      - name: Deploy to IKS
        run: |
          ibmcloud ks cluster config --cluster $IKS_CLUSTER
          cd ./k8s
          curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image injection-image-iks="$REGISTRY_HOSTNAME"/"$ICR_NAMESPACE"/"$IMAGE_NAME":"$GITHUB_SHA"
          ./kustomize build . | kubectl apply -f -

      # Setup nodejs version 14
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: |
          npm install @semantic-release/github -D

      # Create new release
      - name: Create Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
